{"version":3,"sources":["Components/Option.js","Components/OptionList.js","Components/Buttons.js","Components/Timer.js","App.js","index.js"],"names":["Option","labelName","value","setTime","useState","term","setTerm","className","style","padding","type","min","onChange","e","target","OptionList","pomodoro","breakTime","longBreak","time","setter","Buttons","startText","stopText","setIsOn","isOn","textAlign","onClick","Timer","pomodoroTime","longBreakTime","phase","setPhase","pomodoroCount","timeLeft","setTimeLeft","timerId","padTime","strTime","String","length","useEffect","setInterval","console","log","clearInterval","Math","floor","minutes","seconds","App","setPomodoroTime","setBreakTime","setLongBreakTime","marginTop","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.905ab181.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Option = ({labelName, value, setTime}) => {\r\n  const [term, setTerm] = useState(value)\r\n  return (\r\n    <div className=\"ui labeled input\" style={{padding : \"5px\"}}>\r\n      <div className=\"ui label\">{labelName}</div>\r\n      <input type=\"number\"\r\n             min=\"1\"\r\n             value={term}\r\n             onChange={(e) => {\r\n               setTerm(e.target.value)\r\n               setTime(e.target.value)\r\n             }}\r\n             />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Option\r\n","import React from 'react';\r\nimport Option from './Option';\r\n\r\nconst OptionList = ({pomodoro, breakTime, longBreak}) => {\r\n  return (\r\n    <div className=\"ui horizontal list\">\r\n      <div className=\"item\">\r\n        <Option labelName=\"Pomodoro\" value={pomodoro.time} setTime={pomodoro.setter} />\r\n      </div>\r\n      <div className=\"item\">\r\n        <Option labelName=\"Short Break\" value={breakTime.time} setTime={breakTime.setter}/>\r\n      </div>\r\n      <div className=\"item\">\r\n        <Option labelName=\"Long Break\" value={longBreak.time} setTime={longBreak.setter}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionList\r\n","import React, { useState } from 'react';\r\n\r\nconst Buttons = ({startText, stopText, setIsOn, isOn}) => {\r\n  return (\r\n    <div style={{padding : \"10px 0px 10px 0px\", textAlign: \"center\"}}>\r\n      <button className={`ui ${isOn ? 'red' : 'green'} button`} onClick={() => {\r\n        setIsOn(!isOn)\r\n      }}>{`${isOn ? stopText : startText}`}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","import React, {useState, useEffect} from 'react';\r\nimport TimerCSS from './Timer.css'\r\nimport Buttons from \"./Buttons\"\r\n\r\nconst Timer = ({pomodoroTime, breakTime, longBreakTime}) => {\r\n\r\n  const [phase, setPhase] = useState(\"Session\")\r\n  var pomodoroCount = 1\r\n  const [isOn, setIsOn] = useState(false)\r\n  const [timeLeft, setTimeLeft] = useState(pomodoroTime)\r\n  var timerId = false\r\n  // get seconds by multiplying time by 60\r\n\r\n  const getCycleTime = () => {\r\n    if (phase === \"Session\") {\r\n      console.log(\"Returning session time of\", pomodoroTime)\r\n      return pomodoroTime\r\n    } else if (phase === \"Short Break\") {\r\n      console.log(\"Returning break time of\", breakTime)\r\n      return breakTime\r\n    } else if (phase === \"Long Break\") {\r\n      console.log(\"Returning long break time of\", longBreakTime)\r\n      return longBreakTime\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const padTime = (time) => {\r\n    let strTime = String(time)\r\n    return strTime.length > 1 ? strTime : \"0\" + strTime\r\n  }\r\n\r\n  const updateTime = () => {\r\n    if (timeLeft === 0) {\r\n      if (phase === \"Session\") {\r\n        if (pomodoroCount < 4) {\r\n          console.log(\"Setting as short break\")\r\n          setPhase(\"Short Break\")\r\n        } else {\r\n          setPhase(\"Long Break\")\r\n        }\r\n      } else if (phase === \"Short Break\") {\r\n        setPhase(\"Session\")\r\n        pomodoroCount += 1\r\n        console.log(\"Pomodoro\", pomodoroCount)\r\n      } else if (phase === \"Long Break\") {\r\n        setPhase(\"End\")\r\n      }\r\n    } else {\r\n      setTimeLeft(timeLeft-1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOn) {\r\n      timerId = setInterval(() => updateTime(), 1000)\r\n      return (() => {\r\n        clearInterval(timerId)\r\n      })\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimeLeft(getCycleTime())\r\n  }, [phase])\r\n\r\n  const transformSeconds = () => {\r\n      const minutes = padTime(Math.floor(timeLeft / 60))\r\n      const seconds = padTime(Math.floor(timeLeft % 60))\r\n      return [minutes, seconds]\r\n  }\r\n\r\n  const Reset = () => {\r\n    setPhase(\"Session\")\r\n    pomodoroCount=1\r\n  }\r\n\r\n  const [minutes, seconds] = transformSeconds()\r\n\r\n  return (\r\n    <div>\r\n      <Buttons startText=\"Start\"\r\n           stopText=\"Pause\"\r\n           setIsOn={setIsOn}\r\n           isOn={isOn} />\r\n      <hr/>\r\n      <div className=\"timerContainer\">\r\n        <h1 className=\"ui header\">{phase}</h1>\r\n        { isOn ?\r\n            <p className=\"timer\">\r\n              {minutes} : {seconds}\r\n            </p>\r\n          : <p className=\"timer\">PAUSED</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react';\r\nimport OptionList from './Components/OptionList'\r\nimport Timer from \"./Components/Timer\"\r\n\r\nconst App = () => {\r\n  const [pomodoroTime, setPomodoroTime] = useState(1)\r\n  const [breakTime, setBreakTime] = useState(1)\r\n  const [longBreakTime, setLongBreakTime] = useState(1)\r\n\r\n  return (\r\n    <div className=\"ui container\" style={{marginTop: \"10px\"}}>\r\n      <h3 className=\"ui header\">Quickly Pomodoro</h3>\r\n      <OptionList\r\n        pomodoro = {{ time: pomodoroTime, setter: setPomodoroTime}}\r\n        breakTime = {{ time: breakTime, setter: setBreakTime}}\r\n        longBreak = {{ time: longBreakTime, setter: setLongBreakTime}}\r\n      />\r\n      <div className=\"pomodoro\">\r\n        <Timer pomodoroTime={pomodoroTime*60}\r\n               breakTime={breakTime*60}\r\n               longBreakTime={longBreakTime*60}\r\n        />\r\n      </div>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector(\"#root\")\r\n)\r\n"],"sourceRoot":""}